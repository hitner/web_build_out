{"version":3,"sources":["App.js","component/GlobalInput.js","component/Interface.js","component/EditApiDialog.js","component/SetsList.js","component/req_data.js","serviceWorker.js","index.js","component/utility.js","component/StandardModal.js","test_data.js"],"names":["vcon","VConsole","setOption","App","props","_this","Object","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onModifyHead","setState","apiDialogIndex","apiDialogOpen","handleApiDialogClose","add_new_set","name","reqapi","ret","rcode","sets","state","push","data","delete_set","index","i","length","splice","goto_set","tc_index","tc","goto_homepage","onSaveApi","dt","console","log","concat","onDeleteApi","JSON","parse","main_list","datasource","origin","status","onGlobalInputChanged","bind","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","onApiInputChanged","onRunApi","onRunAll","onEditApi","onAddApi","_this2","_this3","keys","global_input","forEach","element","interface","api","token","input","hasOwnProperty","res","undefined","str","retArray","reg","result","exec","target","substring","replace","varValue","currentOrigin","replaceVarInString","path","newString","application_json","_this4","describe","final_app_json","finalApplicationJson","fetchInit","method","Utility","headers","Content-Type","body","stringify","fetch","wholeUrl","then","response","json","RET","selfAssert","eval","assert","newStatus","catch","error","errorDict","_this5","requestApi","key","value","apiFromIndex","list","totoal","running","success","failed","dialogApi","statictis","stat_status","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","position","color","aria-label","onClick","_material_ui_icons_Home__WEBPACK_IMPORTED_MODULE_15___default","variant","_component_GlobalInput__WEBPACK_IMPORTED_MODULE_7__","_component_Interface__WEBPACK_IMPORTED_MODULE_8__","_component_EditApiDialog__WEBPACK_IMPORTED_MODULE_9__","open","apiData","onClose","onDelete","onSave","_component_SetsList__WEBPACK_IMPORTED_MODULE_16__","Component","GlobalInput","inputs","map","ele","arr","react__WEBPACK_IMPORTED_MODULE_5___default","type","onChange","e","ApiInput","api_input","apiIndex","ApiDetail","state_string","stateString","Interface","apis","default_api","stringifyApi","dst","EditApiDialog","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","onClickSave","dist","assign","inputChanged","newApi","id","nextProps","nextState","_this$props","other","_Users_liuzhuzhai_Documents_cs_web_http_api_test_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","multiline","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_7___default","SetsList","open_dialog","openDialog","close_dialog","input_name_changed","ent","setName","confirm_dialog","event","namee","trim","on_click_delete_button","SMConfirmDialog","list_data","button","inset","primary","size","mtime","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_9___default","handleClose","aria-labelledby","autoFocus","margin","label","required","fullWidth","__webpack_require__","d","__webpack_exports__","get_set_list","get_set","post_new_set","patch_set","post_api","put_api","delete_api","Host","cb","resp","dock","callback","setIndex","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","StandardModal","navigator","serviceWorker","ready","registration","unregister","pathOnly","split","isEmptyObject","obj","constructor","only_modal","onClickCancelButton","show","onClickConfirmButton","confirmCallback","content","componet","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"w1EAaOA,KAAO,IAAIC,iDAClBD,KAAKE,UAAU,eAAgB,SAEzBC,yBACJ,SAAAA,IAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,oIAAA,EAAAD,CAAAE,KAAAL,MACjBE,EAAAC,OAAAG,+IAAA,EAAAH,CAAAE,KAAAF,OAAAI,oIAAA,EAAAJ,CAAAH,KAAAQ,KAAAH,KAAMJ,KAiMRQ,aAAe,WACbP,EAAKQ,SAAS,CACZC,gBAAgB,EAChBC,eAAc,KArMCV,EAwMnBW,qBAAuB,WACrBX,EAAKQ,SAAS,CACZE,eAAc,KA1MCV,EA8MnBY,YAAc,SAACC,GACbC,oDAAoBD,EAAM,SAACE,GACzB,IAAIA,EAAIC,MAAO,KACRC,EAAQjB,EAAKkB,MAAbD,KACLA,EAAKE,KAAKJ,EAAIK,MACdpB,EAAKQ,SAAS,CACZS,KAAKA,QApNMjB,EA0NnBqB,WAAa,SAACC,GACZR,oDAAkBQ,EAAO,SAACP,GACxB,IAAIA,EAAIC,MAEN,IAFa,IACRC,EAAQjB,EAAKkB,MAAbD,KACIM,EAAI,EAAGA,EAAGN,EAAKO,SAAUD,EAChC,GAAIN,EAAKM,GAAGD,QAAUA,EAKpB,OAJAL,EAAKQ,OAAOF,EAAE,QACdvB,EAAKQ,SAAS,CACZS,KAAKA,OAlOEjB,EA2OnB0B,SAAW,SAACJ,GACVR,oDAAeQ,EAAO,SAACP,GACjBA,EAAIC,OACNhB,EAAKQ,SAAS,CACZmB,SAASL,EACTM,GAAGb,EAAIK,UAhPIpB,EAuPnB6B,cAAe,WACb7B,EAAKQ,SAAS,CACZmB,SAAS,KAzPM3B,EA6PnB8B,UAAY,SAACV,GAAQ,IACZX,EAAkBT,EAAKkB,MAAvBT,eACHA,GAAkB,EAEpBK,oDAAed,EAAKkB,MAAMS,SAAUlB,EAAgBW,EAAO,SAACW,GAC1D/B,EAAK0B,SAAS1B,EAAKkB,MAAMS,aAGA,IAApBlB,EACPK,oDAAgBd,EAAKkB,MAAMS,SAAUP,EAAM,SAACW,GAC1B,IAAbA,EAAGf,QACJgB,QAAQC,IAAR,oBAAAC,OAAgClC,EAAKkB,MAAMS,WAC3C3B,EAAK0B,SAAS1B,EAAKkB,MAAMS,aAK7Bb,oDAAiBd,EAAKkB,MAAMS,SAASP,EAAM,SAACW,GAC1B,IAAbA,EAAGf,QACJgB,QAAQC,IAAR,qBAAAC,OAAiClC,EAAKkB,MAAMS,WAC5C3B,EAAK0B,SAAS1B,EAAKkB,MAAMS,aAI/B3B,EAAKQ,SAAS,CACZE,eAAe,KAtRAV,EA2RnBmC,YAAc,WACRnC,EAAKkB,MAAMT,gBAAkB,GAC/BK,oDAAkBd,EAAKkB,MAAMS,SAAU3B,EAAKkB,MAAMT,eAAgB,SAACW,GACjEY,QAAQC,IAAR,qBAAAC,OAAiClC,EAAKkB,MAAMS,WAC5C3B,EAAK0B,SAAS1B,EAAKkB,MAAMS,YAG7B3B,EAAKQ,SAAS,CACZE,eAAe,KAjSjBV,EAAKkB,MAAQ,CACXS,SAAS,EACTV,KAAKmB,KAAKC,MAAMC,4CAAWrB,KAC3BW,GAAGQ,KAAKC,MAAME,4CACdC,OAAO,OACPC,OAAO,GACP/B,eAAc,EACdD,gBAAgB,GAElBT,EAAK0C,qBAAuB1C,EAAK0C,qBAAqBC,KAA1B1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KAC5BA,EAAK6C,kBAAoB7C,EAAK6C,kBAAkBF,KAAvB1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KACzBA,EAAK8C,SAAW9C,EAAK8C,SAASH,KAAd1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KAChBA,EAAK+C,SAAW/C,EAAK+C,SAASJ,KAAd1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KAChBA,EAAKgD,UAAYhD,EAAKgD,UAAUL,KAAf1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KACjBA,EAAKiD,SAAWjD,EAAKiD,SAASN,KAAd1C,OAAA2C,2IAAA,EAAA3C,QAAA2C,2IAAA,EAAA3C,CAAAD,KAhBCA,2VAmBC,IAAAkD,EAAA/C,KAClBW,oDAAoB,SAACC,GACfA,EAAIC,OACNkC,EAAK1C,SAAS,CACZS,KAAKF,EAAIK,KAAKH,6CAOVF,GAAK,IAAAoC,EAAAhD,KACVyB,EAAMzB,KAAKe,MAAXU,GACL3B,OAAOmD,KAAKxB,EAAGyB,cAAcC,QAAQ,SAAAC,GACH,YAA7B3B,EAAGyB,aAAaE,KACjB3B,EAAGyB,aAAaE,GAAWxC,EAC3BoC,EAAK3C,SAAS,CACZoB,GAAGA,+CAST,OAAIzB,KAAKe,MAAMU,GAAGY,OACTrC,KAAKe,MAAMU,GAAGY,OAAOrC,KAAKe,MAAMsB,QAGhC,4CAIElB,GAEX,OADanB,KAAKe,MAAXU,GACG4B,UAAUlC,oCAGbmC,EAAKC,GACZ,GAAID,EAAIE,MAAMC,eAAeF,GAC3B,OAAOD,EAAIE,MAAMD,GAGjB,IAAIG,EAAM1D,KAAKe,MAAMU,GAAGyB,aAAaK,GAIrC,YAHWI,IAARD,IACDA,EAAM,IAEDA,6CAIQJ,EAAKM,GAItB,IAHA,IACIC,EADAC,EAAM,aAENC,EAASH,EACwB,QAA9BC,EAAWC,EAAIE,KAAKJ,KAAgB,CACzC,IAAIK,EAASJ,EAAS,GAAGK,UAAU,EAAGL,EAAS,GAAGxC,OAAO,GACzD0C,EAASA,EAAOI,QAAQN,EAAS,GAAI7D,KAAKoE,SAASd,EAAKW,IAE1D,OAAOF,mCAGAT,GACP,OAAOtD,KAAKqE,gBAAkBrE,KAAKsE,mBAAmBhB,EAAKA,EAAIiB,mDAG5CjB,GACnB,IAAIkB,EAAYxE,KAAKsE,mBAAmBhB,EAAKA,EAAImB,kBAC7CV,EAAS,GAIb,OAHIS,IACFT,EAAS9B,KAAKC,MAAMsC,IAEfT,gDAIET,IAAKnC,OAAO,IAAAuD,OAAA1E,KAChBsC,OAAUtC,KAAKe,MAAfuB,OACLA,OAAOnB,OAAS,CACdJ,MAAM,EACN4D,SAAS,IAEX3E,KAAKK,SAAS,CACZiC,OAAOA,SAGT,IAAIsC,eAAiB5E,KAAK6E,qBAAqBvB,KAE3CwB,UAAY,CACdC,OAAOzB,IAAIyB,QAEPC,mDAAsBJ,kBAC1BE,UAAUG,QAAU,CAClBC,eAAgB,oBAElBJ,UAAUK,KAAOlD,KAAKmD,UAAUR,iBAElCS,MAAMrF,KAAKsF,SAAShC,KAAKwB,WAAWS,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC7DF,KAAK,SAAAG,KACJ,IAAIC,WAAaC,KAAKtC,IAAIuC,QAC1BhE,QAAQC,IAAR,aAAAC,OAAyBZ,MAAzB,oBAAAY,OAAiD4D,aACjD,IAAIG,UAAYpB,OAAK3D,MAAMuB,OAC3BwD,UAAU3E,OAAS,CACjBJ,MAAM4E,WAAW,EAAE,EACnBhB,SAAS1C,KAAKmD,UAAUM,MAE1BhB,OAAKrE,SAAS,CACZiC,OAAOwD,cAGVC,MAAM,SAACC,GACNnE,QAAQC,IAAIkE,GACZ,IAAIF,EAAYpB,OAAK3D,MAAMuB,OACvB2D,EAAYD,EACZA,EAAMR,WACRS,EAAYD,EAAMR,SACfQ,EAAMR,SAASvE,OAChBgF,EAAYD,EAAMR,SAASvE,OAG/B6E,EAAU3E,OAAS,CACjBJ,MAAM,EACN4D,SAAS1C,KAAKmD,UAAUa,IAE1BvB,OAAKrE,SAAS,CACZiC,OAAOwD,yCAMH,IAAAI,EAAAlG,KACKA,KAAKe,MAAXU,GACJ4B,UAAUF,QACX,SAACC,EAASjC,GACV+E,EAAKC,WAAW/C,EAASjC,kDAIRiF,EAAIC,GAAO,IACvB5E,EAAMzB,KAAKe,MAAXU,GACPA,EAAGyB,aAAakD,GAAOC,EACvBrG,KAAKK,SAAS,CACZoB,GAAGA,8CAIWN,EAAMiF,EAAKC,GAAO,IAC3B5E,EAAMzB,KAAKe,MAAXU,GACPA,EAAG4B,UAAUlC,GAAOqC,MAAM4C,GAAOC,EACjCrG,KAAKK,SAAS,CACZoB,GAAGA,qCAIEN,GACPU,QAAQC,IAAR,iBAAAC,OAA6BZ,IAC7B,IAAImC,EAAMtD,KAAKsG,aAAanF,GAC5BnB,KAAKmG,WAAW7C,EAAInC,sCAIpBnB,KAAKK,SAAS,CACZE,eAAc,EACdD,gBAAgB,sCAGVa,GACRnB,KAAKK,SAAS,CACZE,eAAc,EACdD,eAAea,wCA4GPoF,GACV,IAAI3F,EAAK,CACP4F,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,OAAO,GAeT,OAZA/F,EAAI4F,OAASxG,KAAKe,MAAMU,GAAG4B,UAAUhC,OACrCkF,EAAKpD,QAAQ,SAACC,GACS,IAAlBA,EAAQrC,MACTH,EAAI6F,UAEoB,IAAlBrD,EAAQrC,MACdH,EAAI8F,UAEoB,IAAlBtD,EAAQrC,OACdH,EAAI+F,WAGD/F,mCAIA,IAIHgG,EAHGnF,EAAMzB,KAAKe,MAAXU,GACHoF,EAAY7G,KAAK8G,YAAY9G,KAAKe,MAAMuB,QAgB5C,OAbItC,KAAKe,MAAMR,gBACTP,KAAKe,MAAMT,gBAAkB,EAC/BsG,EAAYnF,EAAG4B,UAAUrD,KAAKe,MAAMT,iBAEE,IAA/BN,KAAKe,MAAMT,iBAClBsG,EAAY,CACVlG,KAAKe,EAAGf,KACR2B,OAAOZ,EAAGY,OACVa,aAAazB,EAAGyB,gBAMpB6D,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,2CAAAC,EAAAC,cAACE,gDAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAChCN,2CAAAC,EAAAC,cAACE,gDAAA,EAAD,KACEJ,2CAAAC,EAAAC,cAACE,gDAAA,EAAD,CAAaE,MAAM,UAAUC,aAAW,OAAOC,QAASvH,KAAK0B,eAC3DqF,2CAAAC,EAAAC,cAACO,8DAAAR,EAAD,OAEDhH,KAAKe,MAAMS,SAAW,GAAKuF,2CAAAC,EAAAC,cAACE,gDAAA,EAAD,CAAYM,QAAQ,KAAKJ,MAAM,WACxD5F,EAAGf,QAKRqG,2CAAAC,EAAAC,cAACE,gDAAA,EAAD,MACCnH,KAAKe,MAAMS,SAAS,EAAEuF,2CAAAC,EAAAC,cAAA,WACrBF,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,2CAAAC,EAAAC,cAAA,2BAASjH,KAAKe,MAAMsB,OAApB,YAAqCrC,KAAKqE,iBAC1C0C,2CAAAC,EAAAC,cAACS,oDAAA,EAAD,CAAaxE,aAAczB,EAAGyB,aAClBX,qBAAsBvC,KAAKuC,uBAEvCwE,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,2CAAAC,EAAAC,cAAA,UAAQM,QAASvH,KAAK4C,UAAtB,4BACAmE,2CAAAC,EAAAC,cAAA,UAAQM,QAASvH,KAAKI,cAAtB,SAGF2G,2CAAAC,EAAAC,cAAA,2BAASJ,EAAUL,OAAnB,gBACAO,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWL,EAAUJ,QAArC,YADA,IAEAM,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWL,EAAUH,QAArC,YAFA,IAGAK,2CAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUL,EAAUF,OAApC,aAEAI,2CAAAC,EAAAC,cAACU,kDAAA,EAAD,CAAWtE,UAAY5B,EAAG4B,UACxBX,kBAAmB1C,KAAK0C,kBACxBC,SAAY3C,KAAK2C,SACjBE,UAAa7C,KAAK6C,UAClBP,OAAStC,KAAKe,MAAMuB,SAEtByE,2CAAAC,EAAAC,cAAA,UAAQM,QAASvH,KAAK8C,UAAtB,4BACAiE,2CAAAC,EAAAC,cAACW,sDAAA,EAAD,CAAeC,KAAQ7H,KAAKe,MAAMR,cAChCuH,QAAWlB,EACXmB,QAAS/H,KAAKQ,qBACdwH,SAAUhI,KAAKgC,YACfiG,OAAQjI,KAAK2B,aAGfoF,2CAAAC,EAAAC,cAACiB,kDAAA,EAAD,CAAUpH,KAAMd,KAAKe,MAAMD,KACjBS,SAAYvB,KAAKuB,SACjBd,YAAeT,KAAKS,YACpBS,WAAclB,KAAKkB,uBApYrBiH,8CA8YHxI,wHC3ZTyI,2LACO,IAAAvI,EAAAG,KACDqI,EAASvI,OAAOmD,KAAKjD,KAAKJ,MAAMsD,cAAcoF,IAC9C,SAACC,EAAKpH,EAAOqH,GACT,OAAQC,EAAAzB,EAAAC,cAAA,OAAKb,IAAKmC,GACbA,EADG,IACEE,EAAAzB,EAAAC,cAAA,SAAOyB,KAAK,OAAOrC,MAASxG,EAAKD,MAAMsD,aAAaqF,GACzDI,SAAU,SAACC,GAAD,OAAK/I,EAAKD,MAAM2C,qBAAqBgG,EAAKK,EAAE3E,OAAOoC,aAK1E,OAAQoC,EAAAzB,EAAAC,cAAA,WACHoB,UAZaF,cAiBXC,qHChBTS,mLACO,IAAAhJ,EAAAG,KACDqI,EAASvI,OAAOmD,KAAKjD,KAAKJ,MAAMkJ,WAAWR,IAC3C,SAACC,EAAKpH,EAAOqH,GACT,OAAQC,EAAAzB,EAAAC,cAAA,OAAKb,IAAKmC,GACbA,EADG,IACEE,EAAAzB,EAAAC,cAAA,SAAOyB,KAAK,OAAOrC,MAASxG,EAAKD,MAAMkJ,UAAUP,GACtDI,SAAU,SAACC,GAAD,OAAK/I,EAAKD,MAAM8C,kBAAkB7C,EAAKD,MAAMmJ,SAAUR,EAAKK,EAAE3E,OAAOoC,aAK5F,OAAQoC,EAAAzB,EAAAC,cAAA,WACHoB,UAZUF,iBA+BjBa,mLACQ,IAAAjG,EAAA/C,KACCsD,EAAOtD,KAAKJ,MAAZ0D,IACAhB,EAAUtC,KAAKJ,MAAf0C,OAEH2G,EAnBZ,SAAqB3G,GACjB,GAAGA,EACC,OAAOA,EAAOvB,OACV,KAAK,EACL,MAAO,UACP,KAAK,EACL,MAAO,UACP,KAAK,EACL,MAAO,SAGf,MAAO,GAQgBmI,CAAY5G,GAC3BqC,EAAWrC,EAAQA,EAAOqC,SAAW,GAGzC,OAAQ8D,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,cACnBuB,EAAAzB,EAAAC,cAAA,WAAMjH,KAAKJ,MAAMuB,MAAjB,IAAyBmC,EAAI5C,MAC7B+H,EAAAzB,EAAAC,cAAA,mBAAWjC,IAAiB1B,EAAIiB,OAChCkE,EAAAzB,EAAAC,cAAC4B,EAAD,CAAUC,UAAWxF,EAAIE,MACrBd,kBAAmB1C,KAAKJ,MAAM8C,kBAC9BqG,SAAU/I,KAAKJ,MAAMuB,QAEzBsH,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,eACXuB,EAAAzB,EAAAC,cAAA,UAAQM,QAAS,SAACqB,GAAD,OAAK7F,EAAKnD,MAAM+C,SAASI,EAAKnD,MAAMuB,SAArD,gBACAsH,EAAAzB,EAAAC,cAAA,UAAQM,QAAS,SAACqB,GAAD,OAAK7F,EAAKnD,MAAMiD,UAAUE,EAAKnD,MAAMuB,SAAtD,SAEJsH,EAAAzB,EAAAC,cAAA,OAAKC,UAAW+B,GAAeA,GAC/BR,EAAAzB,EAAAC,cAAA,WAAMtC,WArBMwD,aA4BlBgB,mLACQ,IAAAnG,EAAAhD,KACFoJ,EAAOpJ,KAAKJ,MAAMyD,UAAUiF,IAAI,SAACC,EAAKpH,EAAOqH,GAC7C,OAAQC,EAAAzB,EAAAC,cAAC+B,EAAD,CAAW5C,IAAKmC,EAAI7H,KAAKS,EAAOmC,IAAKiF,EACzCpH,MAAOA,EACPuB,kBAAmBM,EAAKpD,MAAM8C,kBAC9BC,SAAUK,EAAKpD,MAAM+C,SACrBE,UAAWG,EAAKpD,MAAMiD,UACtBP,OAAQU,EAAKpD,MAAM0C,OAAOnB,OAIlC,OAAQsH,EAAAzB,EAAAC,cAAA,OAAKC,UAAU,aAClBkC,UAbWjB,aAkBTgB,qIC3ETE,UAAc,CAChB3I,KAAK,GACL8C,MAAM,GACNe,KAAK,GACLQ,OAAO,GACPN,iBAAiB,GACjBQ,QAAQ,GACRY,OAAO,KAGX,SAASyD,EAAaxB,GAClB,IAAIyB,EAAM,GASV,OARAzJ,OAAOmD,KAAK6E,GAAS3E,QAAQ,SAACoF,GACE,kBAAjBT,EAAQS,GACfgB,EAAIhB,GAAOtG,KAAKmD,UAAU0C,EAAQS,IAGlCgB,EAAIhB,GAAOT,EAAQS,KAGpBgB,MAGLC,cAEF,SAAAA,EAAY5J,GAAO,IAAAC,EAAAC,OAAA2J,EAAA,EAAA3J,CAAAE,KAAAwJ,IACf3J,EAAAC,OAAA4J,EAAA,EAAA5J,CAAAE,KAAAF,OAAA6J,EAAA,EAAA7J,CAAA0J,GAAArJ,KAAAH,KAAMJ,KAwBVgK,YAAc,WACV,IAAIC,EAAO,GACX/J,OAAOgK,OAAOD,EAAKhK,EAAKkB,MAAMuC,KAC9B,IACIuG,EAAI,MAAY5H,KAAKC,MAAM2H,EAAKrG,OAEpC,MAAOwC,GACC6D,EAAI,MAAY,GAGzBhK,EAAKD,MAAMqI,OAAO4B,IAnCFhK,EAsCnBkK,aAAe,SAACxB,GACZ,IAAIyB,EAASnK,EAAKkB,MAAMuC,IACxB0G,EAAOzB,EAAItE,OAAOgG,IAAM1B,EAAItE,OAAOoC,MACnCxG,EAAKQ,SAAU,CACXiD,IAAI0G,KAvCR,IAAI1G,EAAM+F,EAHK,OAIXzJ,EAAMkI,UACNxE,EAAMgG,EAAa1J,EAAMkI,UAE7BjI,EAAKkB,MAAQ,CACTuC,IAAIA,GAROzD,qFAeGqK,EAAWC,GAO7B,OANKnK,KAAKJ,MAAMiI,MAAQqC,EAAUrC,MAE9B7H,KAAKK,SAAS,CACViD,IAAI4G,EAAUpC,QAAQwB,EAAaY,EAAUpC,SAASuB,KAGvD,mCAwBD,IAAAtG,EAAA/C,KAAAoK,EAC+CpK,KAAKJ,MAA1CmI,GADVqC,EACCtC,QADDsC,EACUrC,SAAQC,EADlBoC,EACkBpC,SAAoBqC,GADtCD,EAC2BnC,OAD3BnI,OAAAwK,EAAA,EAAAxK,CAAAsK,EAAA,4CAEC9G,EAAOtD,KAAKe,MAAZuC,IACH+E,EAAS,GAWb,OAVAvI,OAAOmD,KAAKK,GAAKH,QAAQ,SAAAoF,GACrBF,EAAOrH,KAAM+F,EAAAC,EAAAC,cAAA,OAAKb,IAAKmC,GACnBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeqB,GAC9BxB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOrD,UAAU,gBACbsD,WAAW,EACXP,GAAK1B,EAAKlC,MAAO/C,EAAIiF,GACrBI,SAAU5F,EAAKgH,mBAInBhD,EAAAC,EAAAC,cAACwD,EAAAzD,EAAWqD,EAChBtD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,+CACAxD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,KACKlC,GAELtB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,KACIxD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAQrD,UAAU,aAAaO,QAAQ,WAAWJ,MAAM,YAAYE,QAASS,GAA7E,gBACAjB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAQ9C,QAAQ,WAAWJ,MAAM,UAAUE,QAASvH,KAAK4J,aAAzD,gBACA7C,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAQ9C,QAAQ,WAAWF,QAASQ,GAApC,oBAtEYI,aA6EbqB,8IC9FTkB,cACF,SAAAA,EAAY9K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0K,IACf7K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4K,GAAAvK,KAAAH,KAAMJ,KAMV+K,YAAc,WACV9K,EAAKQ,SAAS,CACVuK,YAAW,KATA/K,EAanBgL,aAAe,WACXhL,EAAKQ,SAAS,CACVuK,YAAW,KAfA/K,EAmBnBiL,mBAAqB,SAACC,GAClBlL,EAAKQ,SAAS,CACV2K,QAAQD,EAAI9G,OAAOoC,SArBRxG,EAwBnBoL,eAAiB,SAACC,GACd,IAAMC,EAAQtL,EAAKkB,MAAMiK,QAAQI,OAC7BD,IACAtL,EAAKQ,SAAS,CACVuK,YAAW,EACXI,QAAQ,KAEZnL,EAAKD,MAAMa,YAAY0K,KA/BZtL,EAmCnBwL,uBAAyB,SAAClK,GACtBmK,YAAe,8CAAAvJ,OAAYZ,EAAZ,iBAAuB,WAClCtB,EAAKD,MAAMsB,WAAWC,MAnC1BtB,EAAKkB,MAAQ,CACT6J,YAAW,EACXI,QAAQ,IAJGnL,wEAyCV,IAAAkD,EAAA/C,KACCuL,EAAYvL,KAAKJ,MAAMkB,KAAKwH,IAAI,SAACC,GACnC,OAAQE,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAUnE,IAAKmC,EAAIpH,MAAOqK,QAAQ,EAAMjE,QAAS,kBAAIxE,EAAKnD,MAAM2B,SAASgH,EAAIpH,SACjFsH,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAckB,OAAO,EAAMC,QAASnD,EAAIpH,QACxCsH,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAckB,OAAO,EAAMC,QAASnD,EAAI7H,OACxC+H,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAckB,OAAO,EAAMC,QAASnD,EAAIoD,OACxClD,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAckB,OAAO,EAAMC,QAASnD,EAAIqD,QACxCnD,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,KACM9B,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAYjD,aAAW,SAASC,QAAS,WAAKxE,EAAKsI,uBAAuB9C,EAAIpH,SAC5EsH,EAAAzB,EAAAC,cAAC4E,EAAA7E,EAAD,WAKhB,OAAQyB,EAAAzB,EAAAC,cAAA,WACJwB,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,KACKgB,GAEL9C,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAQhD,QAASvH,KAAK2K,aAAtB,gBAEFlC,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CACA1C,KAAM7H,KAAKe,MAAM6J,WACjB7C,QAAS/H,KAAK8L,YACdC,kBAAgB,qBAEhBtD,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAaN,GAAG,qBAAhB,kCACAxB,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,KAEE9B,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CACEyB,WAAS,EACTC,OAAO,QACPhC,GAAG,OACHiC,MAAM,gBACNxD,KAAK,OACLC,SAAU3I,KAAK8K,mBACfqB,UAAU,EACVC,WAAS,KAGb3D,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,KACE9B,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAQhD,QAASvH,KAAKiL,eAAgB5D,MAAM,WAA5C,gBAGAoB,EAAAzB,EAAAC,cAACsD,EAAA,EAAD,CAAQhD,QAASvH,KAAK6K,aAAcxD,MAAM,WAA1C,0BArFWc,aA8FRuC,qKCzGf2B,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAArL,IAAAmL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAA,IAAMC,EAAO,aAGN,SAASP,EAAaQ,GACzB3H,MAAM0H,GAAMxH,KAAK,SAAC0H,GACd,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GAAM/L,GACL+L,EAAG/L,KAMR,SAASwL,EAAQtL,EAAO6L,GAC3B3H,MAAM0H,EAAK5L,GAAOoE,KAAK,SAAC0H,GAEpB,OADUA,EAAKxH,SAEhBM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,KAMR,SAASyL,EAAahM,EAAMsM,GAC/B,IAAM/L,EAAO,CACTP,KAAOA,EACP2B,OAAS,CACL6K,KAAO,IAEXhK,aAAe,GAGfG,UAAY,IAEhBgC,MAAM0H,EAAK,CAAChI,OAAO,OACPI,KAAKlD,KAAKmD,UAAUnE,GACpBgE,QAAQ,CACJC,eAAe,sBAE9BK,KAAK,SAAC0H,GACH,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,KAKR,SAASC,EAAWC,EAAOgM,GAC9BtL,QAAQC,IAAR,cAAAC,OAA0BZ,IAI1BkE,MAAM0H,EAAK5L,EAHE,CACT4D,OAAO,WAGVQ,KAAK,SAAC0H,GACH,OAAOA,EAAKxH,SACbM,MAAM,SAACC,MAEPT,KAAK,SAACtE,GACFkM,GACCA,EAASlM,KAMd,SAAS0L,EAAUxL,EAAOF,EAAK+L,GAClC3H,MAAM0H,EAAK5L,EAAO,CACd4D,OAAO,QACPI,KAAKlD,KAAKmD,UAAUnE,GACpBgE,QAAQ,CACJC,eAAe,sBAEpBK,KAAK,SAAC0H,GACL,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,KAKR,SAAS2L,EAASQ,EAAUnM,EAAM+L,GACrC3H,MAAM0H,EAAKK,EAAS,cAAc,CAC9BrI,OAAO,OACPI,KAAKlD,KAAKmD,UAAUnE,GACpBgE,QAAQ,CACJC,eAAe,sBAGtBK,KAAK,SAAC0H,GACH,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,KAKR,SAAS4L,EAAQO,EAAUrE,EAAU9H,EAAK+L,GAC7C3H,MAAM0H,EAAKK,EAAS,cAAcrE,EAAS,CACvChE,OAAO,MACPI,KAAKlD,KAAKmD,UAAUnE,GACpBgE,QAAQ,CACJC,eAAe,sBAGtBK,KAAK,SAAC0H,GACH,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,KAMR,SAAS6L,EAAWM,EAAUrE,EAASiE,GAC1C3H,MAAM0H,EAAKK,EAAS,cAAcrE,EAAS,CACvChE,OAAO,WAEVQ,KAAK,SAAC0H,GACH,OAAOA,EAAKxH,SACbM,MAAM,SAACC,GACNnE,QAAQmE,MAAMA,KACfT,KAAK,SAACtE,GACF+L,GACCA,EAAG/L,kJCnIKoM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECXNC,IAASC,OAAOC,EAAA5G,EAAAC,cAACtH,EAAA,EAAD,MAASkO,SAASC,eAAe,SACjDJ,IAASC,OAAOC,EAAA5G,EAAAC,cAAC8G,EAAA,EAAD,MAAkBF,SAASC,eAAe,iBDyHpD,kBAAmBE,WACrBA,UAAUC,cAAcC,MAAM3I,KAAK,SAAA4I,GACjCA,EAAaC,gDEnIZ,SAASC,EAASzK,GAErB,OADSA,EAAI0K,MAAM,KAAK,GACdA,MAAM,KAAK,GAIlB,SAASC,EAAcC,GAC1B,OAAmC,IAA5B1O,OAAOmD,KAAKuL,GAAKnN,QAAgBmN,EAAIC,cAAgB3O,OAPhEuM,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAAgC,wICIIG,EAAa,KAKXX,cACF,SAAAA,EAAYnO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+N,IACflO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiO,GAAA5N,KAAAH,KAAMJ,KAaV+O,oBAAsB,WAClB9O,EAAKQ,SAAS,CACVqI,KAAK,GACLkG,MAAK,KAjBM/O,EAqBnBgP,qBAAuB,WACnBhP,EAAKQ,SAAS,CACVqI,KAAK,GACLkG,MAAK,IAEL/O,EAAKkB,MAAM+N,iBACXjP,EAAKkB,MAAM+N,mBAzBfjP,EAAKkB,MAAQ,CACT2H,KAAK,GACLkG,MAAK,EACLG,QAAQ,GACRD,gBAAgB,MANLjP,mFAWf6O,EAAa1O,sCAoBb,IAAIgP,EAAW,KACf,OAAOhP,KAAKe,MAAM2H,MACd,IAAK,UACL,MACA,IAAK,mBACLsG,EAAYvG,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,CAAQpH,KAAM7H,KAAKe,MAAM6N,MAAMnG,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,KACnCxG,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,KAAoBjP,KAAKe,MAAMgO,SAC/BtG,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,KACRxG,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,CAAQ1H,QAASvH,KAAK6O,qBAAsBxH,MAAM,WAAlD,gBAGAoB,EAAAzB,EAAAC,cAACgI,EAAA,EAAD,CAAQ1H,QAASvH,KAAK2O,oBAAqBtH,MAAM,WAAjD,mBAWJ,OAAQoB,EAAAzB,EAAAC,cAAA,WAAM+H,UAtDM7G,aAiErB,SAASmD,EAAgByD,EAAS5B,GACrCuB,EAAWrO,SAAS,CAChBuO,MAAK,EACLlG,KAAK,mBACLqG,QAAQA,EACRD,gBAAgB3B,IAZTY,uCClEf1B,EAAAC,EAAAC,EAAA,sBAAApK,IAkNeC,IAlNC,k4LAqNT,IAAMD,EAAS","file":"static/js/main.d635099d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport GlobalInput from './component/GlobalInput';\nimport Interface from './component/Interface';\nimport EditApiDialog from './component/EditApiDialog';\nimport datasource, {main_list} from './test_data';\nimport './App.css';\nimport VConsole from 'vconsole';\nimport * as Utility from './component/utility';\nimport {AppBar, Toolbar, Typography, IconButton, Divider, } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SetsList from './component/SetsList';\nimport * as reqapi from './component/req_data';\n\nconst  vcon = new VConsole();\nvcon.setOption('maxLogNumber', 500);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tc_index:0,//0表示在homepage，其它表示对应tc的index\n      sets:JSON.parse(main_list).sets, //\n      tc:JSON.parse(datasource),\n      origin:\"dock\",\n      status:[],//0 空闲，1正在执行， 2 成功， 3失败 state describe\n      apiDialogOpen:false, //修改、添加api对话框\n      apiDialogIndex:-1,   //-2,修改头部信息 -1新增api，其它对应要修改的api的序号\n    };\n    this.onGlobalInputChanged = this.onGlobalInputChanged.bind(this);\n    this.onApiInputChanged = this.onApiInputChanged.bind(this);\n    this.onRunApi = this.onRunApi.bind(this);\n    this.onRunAll = this.onRunAll.bind(this);\n    this.onEditApi = this.onEditApi.bind(this);\n    this.onAddApi = this.onAddApi.bind(this);\n\n  }\n  componentDidMount() {\n    reqapi.get_set_list((ret)=>{\n      if(!ret.rcode) {\n        this.setState({\n          sets:ret.data.sets,\n        });\n      }\n    });\n\n  }\n\n  updateToken(ret) {\n    var {tc} = this.state;\n    Object.keys(tc.global_input).forEach(element=>{\n      if(tc.global_input[element] === '__TOKEN') {\n        tc.global_input[element] = ret;\n        this.setState({\n          tc:tc,\n        });\n      }\n    });\n  }\n  \n\n  //---------------------------support function -----------------------//\n  currentOrigin() {\n    if (this.state.tc.origin) {\n      return this.state.tc.origin[this.state.origin];\n    }\n    else {\n      return 'NULL';\n    }\n  }\n\n  apiFromIndex(index) {\n    const {tc} = this.state;\n    return tc.interface[index];\n  }\n\n  varValue(api, token) {\n    if (api.input.hasOwnProperty(token)) {\n      return api.input[token];\n    }\n    else {\n      var res = this.state.tc.global_input[token];\n      if(res === undefined) {\n        res = '';\n      }\n      return res;\n    }\n  }\n\n  replaceVarInString(api, str) {\n    var reg = /\\$\\{.+?\\}/g;\n    var retArray;\n    var result = str;\n    while((retArray = reg.exec(str)) !== null) {\n      var target = retArray[0].substring(2, retArray[0].length-1);\n      result = result.replace(retArray[0], this.varValue(api, target));\n    } \n    return result\n  }\n\n  wholeUrl(api) {\n    return this.currentOrigin() + this.replaceVarInString(api, api.path);\n  }\n\n  finalApplicationJson(api) {\n    let newString = this.replaceVarInString(api, api.application_json);\n    let result = {};\n    if (newString) {\n      result = JSON.parse(newString);\n    }\n    return result;\n  }\n\n//请求发起\n  requestApi(api, index) {\n    var {status} = this.state;\n    status[index] = {\n      state:1,\n      describe:'',\n    }\n    this.setState({\n      status:status,\n    });\n\n    var final_app_json = this.finalApplicationJson(api);\n\n    let fetchInit = {\n      method:api.method,\n    }\n    if ( !Utility.isEmptyObject(final_app_json)) {\n      fetchInit.headers = {\n        \"Content-Type\": \"application/json\",\n      };\n      fetchInit.body = JSON.stringify(final_app_json);\n    }\n    fetch(this.wholeUrl(api),fetchInit).then(response => response.json())\n    .then(RET=> {\n      var selfAssert = eval(api.assert);\n      console.log(`api index ${index} ,assert result:${selfAssert}`);\n      var newStatus = this.state.status;\n      newStatus[index] = {\n        state:selfAssert?2:3,\n        describe:JSON.stringify(RET),\n      };\n      this.setState({\n        status:newStatus,\n      });\n    })\n    .catch((error)=>{\n      console.log(error);\n      var newStatus = this.state.status;\n      var errorDict = error;\n      if (error.response) {\n        errorDict = error.response;\n        if(error.response.data) {\n          errorDict = error.response.data;\n        }\n      }\n      newStatus[index] = {\n        state:3,\n        describe:JSON.stringify(errorDict),\n      };\n      this.setState({\n        status:newStatus,\n      });\n    });\n  }\n\n  //----------------------------event response -----------------------//\n  onRunAll(){\n    const {tc} = this.state;\n    tc.interface.forEach(\n      (element, index) => {\n      this.requestApi(element, index);\n    });\n  }\n\n  onGlobalInputChanged(key,value) {\n    const {tc} = this.state;\n    tc.global_input[key] = value;\n    this.setState({\n      tc:tc,\n    });\n  }\n\n  onApiInputChanged(index,key, value) {\n    const {tc} = this.state;\n    tc.interface[index].input[key] = value;\n    this.setState({\n      tc:tc,\n    }); \n  }\n\n  onRunApi(index) {\n    console.log(`run api index:${index}`);\n    var api = this.apiFromIndex(index);\n    this.requestApi(api,index);\n  }\n\n  onAddApi(){\n    this.setState({\n      apiDialogOpen:true,\n      apiDialogIndex:-1,\n    })\n  }\n  onEditApi(index) {\n    this.setState({\n      apiDialogOpen:true,\n      apiDialogIndex:index,\n    })\n  }\n\n  onModifyHead = () => {\n    this.setState({\n      apiDialogIndex:-2,\n      apiDialogOpen:true,\n    })\n  }\n  handleApiDialogClose = () => {\n    this.setState({\n      apiDialogOpen:false,\n    })\n  }\n\n  add_new_set = (name) => {\n    reqapi.post_new_set(name, (ret) => {\n      if(!ret.rcode) {\n        var {sets} = this.state;\n        sets.push(ret.data);\n        this.setState({\n          sets:sets,\n        })\n      }\n    });\n  }\n\n  delete_set = (index) => {\n    reqapi.delete_set(index, (ret) => {\n      if(!ret.rcode) {\n        var {sets} = this.state;\n        for (var i = 0; i< sets.length; ++i) {\n          if (sets[i].index === index) {\n            sets.splice(i,1);\n            this.setState({\n              sets:sets,\n            })\n            return;\n          }\n        } \n      }\n    });\n  }\n\n  goto_set = (index)=> {\n    reqapi.get_set(index, (ret)=> {\n      if(!ret.rcode) {\n        this.setState({\n          tc_index:index,\n          tc:ret.data,\n        })\n      }\n    });\n\n  }\n\n  goto_homepage =()=> {\n    this.setState({\n      tc_index:0,\n    })\n  }\n  //接口集的新增、修改、删除\n  onSaveApi = (data)=> {\n    const {apiDialogIndex} = this.state;\n    if (apiDialogIndex >= 0) {\n      //修改\n      reqapi.put_api(this.state.tc_index, apiDialogIndex, data , (dt)=> {\n        this.goto_set(this.state.tc_index);\n      });\n    }\n    else if (apiDialogIndex === -1) {\n      reqapi.post_api(this.state.tc_index, data, (dt)=> {\n        if(dt.rcode === 0) {\n          console.log(`post api for set ${this.state.tc_index}`);\n          this.goto_set(this.state.tc_index);\n        }\n      });\n    }\n    else {\n      reqapi.patch_set(this.state.tc_index,data, (dt)=> {\n        if(dt.rcode === 0) {\n          console.log(`patch api for set ${this.state.tc_index}`);\n          this.goto_set(this.state.tc_index);\n        }\n      });\n    }\n    this.setState({\n      apiDialogOpen :false,\n    })\n    \n  }\n\n  onDeleteApi = () => {\n    if (this.state.apiDialogIndex >= 0 ) {\n      reqapi.delete_api(this.state.tc_index, this.state.apiDialogIndex, (data) => {\n        console.log(`patch api for set ${this.state.tc_index}`);\n        this.goto_set(this.state.tc_index);\n      });\n    }\n    this.setState({\n      apiDialogOpen :false,\n    })\n  }\n\n\n\n  //----------显示相关-------------\n  stat_status(list) {\n    var ret ={\n      totoal:0,\n      running:0,\n      success:0,\n      failed:0\n    };\n\n    ret.totoal = this.state.tc.interface.length;\n    list.forEach((element)=>{\n      if(element.state === 1) {\n        ret.running ++;\n      }\n      else if(element.state === 2){\n        ret.success ++;\n      }\n      else if(element.state === 3) {\n        ret.failed ++;\n      }\n    });\n    return ret;\n  }\n\n\n  render() {\n    const {tc} = this.state;\n    var statictis = this.stat_status(this.state.status);\n\n    var dialogApi;\n    if (this.state.apiDialogOpen){ \n      if (this.state.apiDialogIndex >= 0) {\n        dialogApi = tc.interface[this.state.apiDialogIndex];\n      }\n      else if (this.state.apiDialogIndex === -2) {\n        dialogApi = {\n          name:tc.name,\n          origin:tc.origin,\n          global_input:tc.global_input,\n        }\n      }\n    }\n    \n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <IconButton  color=\"inherit\" aria-label=\"Home\" onClick={this.goto_homepage}>\n            <HomeIcon />\n          </IconButton>\n          {this.state.tc_index > 0 && <Typography variant=\"h6\" color=\"inherit\">\n            {tc.name}\n            </Typography>\n          }\n        </Toolbar>\n        </AppBar>\n        <Divider/>\n        {this.state.tc_index>0?<div>\n          <div className=\"meta-info\">\n          <div>环境:{this.state.origin}, origin:{this.currentOrigin()}</div>\n          <GlobalInput global_input={tc.global_input}\n                      onGlobalInputChanged={this.onGlobalInputChanged}\n          />\n          <div className=\"button-flex\">\n            <button onClick={this.onRunAll}>全部运行</button>\n            <button onClick={this.onModifyHead}>Edit</button>\n          </div>\n          \n          <div>总共:{statictis.totoal},其中\n          <span className=\"running\">{statictis.running} running</span>,\n          <span className=\"success\">{statictis.success} success</span>,\n          <span className=\"failed\">{statictis.failed} failed</span></div>\n          </div>\n          <Interface interface ={tc.interface}\n            onApiInputChanged={this.onApiInputChanged}\n            onRunApi = {this.onRunApi}\n            onEditApi = {this.onEditApi}\n            status ={this.state.status}\n          />\n          <button onClick={this.onAddApi}>添加接口</button>\n          <EditApiDialog open = {this.state.apiDialogOpen}\n            apiData = {dialogApi}\n            onClose={this.handleApiDialogClose}\n            onDelete={this.onDeleteApi}\n            onSave={this.onSaveApi}\n          />\n        </div> :\n          <SetsList sets={this.state.sets} \n                    goto_set = {this.goto_set}\n                    add_new_set = {this.add_new_set}\n                    delete_set = {this.delete_set}\n          />\n\n        }\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react';\nimport './GlobalInput.css';\n\nclass GlobalInput extends Component {\n    render() {\n        var inputs = Object.keys(this.props.global_input).map(   \n            (ele, index, arr)=> {\n                return (<div key={ele}>\n                    {ele} <input type=\"text\" value = {this.props.global_input[ele]}\n                     onChange={(e)=>this.props.onGlobalInputChanged(ele, e.target.value)}/>\n                </div>)\n            }\n        )\n\n        return (<div>\n            {inputs}\n        </div>)\n    }\n}\n\nexport default GlobalInput;","import React, {Component} from 'react';\nimport './Interface.css';\nimport * as Utility from './utility';\n\nclass ApiInput extends Component {\n    render() {\n        var inputs = Object.keys(this.props.api_input).map(   \n            (ele, index, arr)=> {\n                return (<div key={ele}>\n                    {ele} <input type=\"text\" value = {this.props.api_input[ele]}\n                     onChange={(e)=>this.props.onApiInputChanged(this.props.apiIndex, ele, e.target.value)}/>\n                </div>)\n            }\n        )\n\n        return (<div>\n            {inputs}\n        </div>)\n    }\n}\n\nfunction stateString(status) {\n    if(status) {\n        switch(status.state) {\n            case 1:\n            return 'running';\n            case 2:\n            return 'success';\n            case 3:\n            return 'failed';\n        }\n    }\n    return '';\n}\n\nclass ApiDetail extends Component {\n    render () {\n        const {api} = this.props;\n        const {status} = this.props;\n\n        var state_string = stateString(status);\n        var describe = status? status.describe : '';\n\n\n        return (<div className=\"api-detail\">\n            <div>{this.props.index}.{api.name}</div>\n            <div>PATH:{Utility.pathOnly(api.path)}</div>\n            <ApiInput api_input={api.input} \n                onApiInputChanged={this.props.onApiInputChanged} \n                apiIndex={this.props.index}\n            />\n            <div className='button-flex'>\n                <button onClick={(e)=>this.props.onRunApi(this.props.index)}>运行</button>\n                <button onClick={(e)=>this.props.onEditApi(this.props.index)}>Edit</button>\n            </div>\n            <div className={state_string}>{state_string}</div>\n            <div>{describe}</div>\n        </div>)\n    }\n}\n\n\n\nclass Interface extends Component {\n    render () {\n        var apis = this.props.interface.map((ele, index, arr) => {\n            return (<ApiDetail key={ele.name+index} api={ele} \n                index={index} \n                onApiInputChanged={this.props.onApiInputChanged}\n                onRunApi={this.props.onRunApi}\n                onEditApi={this.props.onEditApi}\n                status={this.props.status[index]}/>\n                )\n        });\n\n        return (<div className=\"interface\">\n            {apis}\n        </div>)\n    }\n}\n\nexport default Interface;","import React, {Component} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { DialogTitle, DialogActions, Button, DialogContent, Input } from '@material-ui/core';\nimport './EditApiDialog.css';\n\n\nconst default_api = {\n    name:'',\n    input:'',\n    path:'',\n    method:'',\n    application_json:'',\n    headers:'',\n    assert:'',\n};\n\nfunction stringifyApi(apiData) {\n    var dst = {}\n    Object.keys(apiData).forEach((ele) => {\n        if (typeof apiData[ele] === \"object\") {\n            dst[ele] = JSON.stringify(apiData[ele])\n        }\n        else {\n            dst[ele] = apiData[ele];\n        }\n    });\n    return dst;\n}\n\nclass EditApiDialog extends Component {\n\n    constructor(props) {\n        super(props);\n\n        var api = default_api;\n        if (props.apiData) {\n            api = stringifyApi(props.apiData);\n        }\n        this.state = {\n            api:api,\n        }\n    }\n\n\n\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!this.props.open && nextProps.open) {\n            //重新展示\n            this.setState({\n                api:nextProps.apiData?stringifyApi(nextProps.apiData):default_api,\n            });\n        }\n        return true;\n    }\n\n    onClickSave = ()=> {\n        var dist = {}\n        Object.assign(dist,this.state.api);\n        try {\n            dist['input'] = JSON.parse(dist.input);\n            } \n        catch (error) {\n                dist['input'] = {}\n        };\n        \n       this.props.onSave(dist);\n    }\n\n    inputChanged = (ele) => {\n        var newApi = this.state.api;\n        newApi[ele.target.id] = ele.target.value;\n        this.setState ({\n            api:newApi,\n        });\n    }\n\n    render () {\n        const {apiData, onClose,onDelete,onSave, ...other} = this.props;\n        const {api} = this.state;\n        var inputs = [];\n        Object.keys(api).forEach(ele => {\n            inputs.push((<div key={ele}>\n                <div className=\"input-label\">{ele}</div>\n                <Input className=\"input-content\" \n                    multiline={true}\n                    id= {ele} value={api[ele]} \n                    onChange={this.inputChanged}/>\n              </div>))\n        }); \n\n        return (<Dialog {...other}>\n            <DialogTitle>预览/修改/删除</DialogTitle>\n            <DialogContent>\n                {inputs}\n            </DialogContent>\n            <DialogActions>\n                <Button className=\"delete-btn\" variant=\"outlined\" color='secondary' onClick={onDelete}>删除</Button>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.onClickSave} >保存</Button>\n                <Button variant=\"outlined\" onClick={onClose}>Cancel </Button>\n            </DialogActions>\n        </Dialog>)\n    }\n}\n\n\nexport default EditApiDialog;","import React ,{Component} from 'react';\nimport {SMConfirmDialog} from './StandardModal';\n\nimport './SetsList.css';\nimport { List, ListItem, ListItemText ,ListItemSecondaryAction, IconButton, Button, Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass SetsList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openDialog:false,\n            setName:''\n        }\n    }\n    open_dialog = () =>{\n        this.setState({\n            openDialog:true,\n        })\n    }\n\n    close_dialog = ()=> {\n        this.setState({\n            openDialog:false,\n        })\n    }\n\n    input_name_changed = (ent)=> {\n        this.setState({\n            setName:ent.target.value,\n        })\n    }\n    confirm_dialog = (event)=> {\n        const namee = this.state.setName.trim();\n        if (namee) {\n            this.setState({\n                openDialog:false,\n                setName:'',\n            })\n            this.props.add_new_set(namee);\n        }\n    }\n\n    on_click_delete_button = (index)=> {\n        SMConfirmDialog(`确定删除测试集\"${index}\"吗？`,()=>{\n            this.props.delete_set(index);\n        });\n    }\n\n    render() {\n        const list_data = this.props.sets.map((ele)=> {\n            return (<ListItem key={ele.index} button={true} onClick={()=>this.props.goto_set(ele.index)}>\n                <ListItemText inset={true} primary={ele.index}></ListItemText>\n                <ListItemText inset={true} primary={ele.name}></ListItemText>\n                <ListItemText inset={true} primary={ele.size}></ListItemText>\n                <ListItemText inset={true} primary={ele.mtime}></ListItemText>\n                <ListItemSecondaryAction>\n                      <IconButton aria-label=\"Delete\" onClick={()=>{this.on_click_delete_button(ele.index);}}>\n                        <DeleteIcon />\n                      </IconButton>\n                </ListItemSecondaryAction>\n            </ListItem>)\n        })\n        return (<div>\n            <List>\n                {list_data}\n            </List>\n            <Button onClick={this.open_dialog}>\n                新增</Button>\n          <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">测试集名称</DialogTitle>\n          <DialogContent>\n            \n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"test set name\"\n              type=\"text\"\n              onChange={this.input_name_changed}\n              required={true} \n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.confirm_dialog} color=\"primary\">\n              确认\n            </Button>\n            <Button onClick={this.close_dialog} color=\"primary\">\n              取消\n            </Button>\n          </DialogActions>\n            </Dialog>\n        </div>)\n    }\n}\n\nexport default SetsList;\n\n\n","\nconst Host = '/testsets/';\n\n\nexport function get_set_list(cb) {\n    fetch(Host).then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb && data) {\n            cb(data);\n        }\n    });\n}\n\n\nexport function get_set(index, cb) {\n    fetch(Host+index).then((resp)=>{\n        var aa =  resp.json();\n        return aa;\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    })\n}\n\n\nexport function post_new_set(name, cb) {\n    const data = {\n        \"name\":name,\n        \"origin\":{\n            \"dock\":\"\",\n        },\n        \"global_input\":{\n             \n        },\n        \"interface\":[],\n    };\n    fetch(Host,{method:'POST',\n                body:JSON.stringify(data),\n                headers:{\n                    'Content-Type':'application/json',\n                }})\n    .then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    })\n}\n\nexport function delete_set(index, callback) {\n    console.log(`delete set ${index}`);\n    const para = {\n        method:'DELETE',\n    }\n    fetch(Host+index,para)\n    .then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n\n    }).then((data)=>{\n        if(callback) {\n            callback(data);\n        }\n    })\n}\n\n\nexport function patch_set(index, data,cb) {\n    fetch(Host+index, {\n        method:'PATCH',\n        body:JSON.stringify(data),\n        headers:{\n            'Content-Type':'application/json',\n        }\n    }).then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    }) \n}\n\nexport function post_api(setIndex, data, cb) {\n    fetch(Host+setIndex+'/interface/',{\n        method:'POST',\n        body:JSON.stringify(data),\n        headers:{\n            'Content-Type':'application/json',\n        }\n    })\n    .then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    }) \n}\n\nexport function put_api(setIndex, apiIndex, data,cb) {\n    fetch(Host+setIndex+'/interface/'+apiIndex,{\n        method:'PUT',\n        body:JSON.stringify(data),\n        headers:{\n            'Content-Type':'application/json',\n        }\n    })\n    .then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    })  \n}\n\n\nexport function delete_api(setIndex, apiIndex,cb) {\n    fetch(Host+setIndex+'/interface/'+apiIndex,{\n        method:'DELETE',\n    })\n    .then((resp)=>{\n        return resp.json();\n    }).catch((error)=>{\n        console.error(error);\n    }).then((data)=>{\n        if(cb) {\n            cb(data);\n        }\n    }) \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StandardModal from './component/StandardModal';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<StandardModal/>, document.getElementById('toast-dialog'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export function pathOnly(str) {\n    var pp = str.split('?')[0];\n    return pp.split('#')[0];\n}\n\n\nexport function isEmptyObject(obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n}","\nimport React, {Component} from 'react';\nimport { Dialog, DialogContent, DialogContentText, DialogActions,Button } from '@material-ui/core';\n\nvar only_modal = null;\n\n\n\n\nclass StandardModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type:'' ,// [none], K-toast,  K-confirm-dialog,  K-dialog\n            show:false,\n            content:'',\n            confirmCallback:null,\n        }\n    }\n\n    componentDidMount() {\n        only_modal = this;\n    }\n\n    onClickCancelButton = ()=> {\n        this.setState({\n            type:'',\n            show:false,\n        })\n    }\n\n    onClickConfirmButton = ()=> {\n        this.setState({\n            type:'',\n            show:false, \n        });\n        if (this.state.confirmCallback) {\n            this.state.confirmCallback();\n        }\n    }\n    render () {\n        var componet = null;\n        switch(this.state.type) {\n            case 'K-toast':\n            break;\n            case 'K-confirm-dialog':\n            componet = (<Dialog open={this.state.show}><DialogContent>\n                    <DialogContentText>{this.state.content}</DialogContentText>\n                    <DialogActions>\n            <Button onClick={this.onClickConfirmButton} color=\"primary\">\n              确认\n            </Button>\n            <Button onClick={this.onClickCancelButton} color=\"primary\">\n              取消\n            </Button>\n          </DialogActions>\n                </DialogContent></Dialog>)\n            break;\n            case 'K-dialog':\n            break;\n            default :\n            break;\n        }\n        return (<div>{componet}</div>)\n    }\n}\n\nexport default StandardModal;\n\nexport function SMToast(content, showtime = 2) {\n\n}\n\n\nexport function SMConfirmDialog(content, callback) {\n    only_modal.setState({\n        show:true,\n        type:'K-confirm-dialog',\n        content:content,\n        confirmCallback:callback,\n    });\n}","\nconst datasource = `\n{\n    \"name\":\"foo bar\",\n    \"origin\":{\n        \"pre\":\"https://liveamusecommpre.lizhi.fm\",\n        \"dock\":\"http://192.168.10.237:8800\",\n        \"prod\":\"https://liveamusecomm.lizhi.fm\"\n    },\n    \"global_input\":{\n        \"token\":\"\" \n    },\n    \"interface\":[{\n            \"name\":\"api_get_set_list\",\n            \"input\":{ \n            },\n            \"path\":\"/testsets\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n                    \n        },{\n            \"name\":\"api_add_file\",\n            \"input\":{ \n                \"content\":\"\"\n            },\n            \"path\":\"/testsets\",\n            \"method\": \"POST\",  \n            \"application_json\" : {\n                \"name\":\"test\",\n                \"content\":\"\\${content}\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\" \n        },{\n            \"name\":\"api_get_set_content\",\n            \"input\":{ \n                \"index\":0\n            },\n            \"path\":\"/testsets/\\${index}\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_delete_set\",\n            \"input\":{ \n                \"index\":0 \n            },\n            \"path\":\"/testsets/\\${index}\",\n            \"method\": \"DELETE\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\" \n        },{\n            \"name\":\"api_patch_set\",\n            \"input\":{ \n                \"name\":\"new name\",\n                \"index\":0\n            },\n            \"path\":\"/testsets/\\${index}\",\n            \"method\": \"PATCH\",  \n            \"application_json\" : {\n                \"name\":\"\\${name}\",\n                \"describe\":\"哈哈哈哈哈哈\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_post_interface\",\n            \"input\":{ \n                \"name\":\"new name\",\n                \"index\":0\n            },\n            \"path\":\"/testsets/\\${index}/interface\",\n            \"method\": \"POST\",  \n            \"application_json\" : {\n                \"name\":\"\\${name}\",\n                \"describe\":\"哈哈哈哈哈哈\",\n                \"method\":\"GET\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_put_interface\",\n            \"input\":{ \n                \"from_put\":\"it is from put\",\n                \"index\":0,\n                \"inter\":0\n            },\n            \"path\":\"/testsets/\\${index}/interface/\\${inter}\",\n            \"method\": \"PUT\",  \n            \"application_json\" : {\n                \"name\":\"PUTkkkk\",\n                \"describe\":\"哈哈哈哈哈哈dd\",\n                \"method\":\"GET\",\n                \"content\":\"\\${from_put}\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_delete_interface\",\n            \"input\":{ \n                \"index\":0,\n                \"inter\":0\n            },\n            \"path\":\"/testsets/\\${index}/interface/\\${inter}\",\n            \"method\": \"DELETE\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_master_get_connect\",\n            \"input\":{ \n            },\n            \"path\":\"/dropim/getConnectionAttribute\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_master_send_msg\",\n            \"input\":{ \n                \"cmd\":\"0\"\n            },\n            \"path\":\"/dropim/webSend?session=\\${token}\",\n            \"method\": \"POST\",  \n            \"application_json\" : {\n                \"cmd\":\"\\${cmd}\",\n                \"describe\":\"hello world\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_master_long_poll\",\n            \"input\":{ \n                \"seq\":\"0\"\n            },\n            \"path\":\"/dropim/syncWebMessages?session=\\${token}&seq=\\${seq}\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_slave_connect_to\",\n            \"input\":{ \n                \n            },\n            \"path\":\"/dropim/connect?token=\\${token}\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_slave_send_msg\",\n            \"input\":{ \n                \"cmd\":\"0\"\n            },\n            \"path\":\"/dropim/clientSend?token=\\${token}\",\n            \"method\": \"POST\",  \n            \"application_json\" : {\n                \"cmd\":\"\\${cmd}\",\n                \"describe\":\"client\"\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        },{\n            \"name\":\"api_slave_long_poll\",\n            \"input\":{ \n                \"seq\":\"0\"\n            },\n            \"path\":\"/dropim/syncClientMessages?token=\\${token}&seq=\\${seq}\",\n            \"method\": \"GET\",  \n            \"application_json\" : {\n            },\n            \"headers\":{\n            },\n            \"assert\":\"RET.rcode === 0\"\n        }\n    ],\n\n    \"cases\":[{\n            \"name\":\"购买座驾后有改id\",\n            \"process\":\"  api_buy_mount('12223232'); api_user_info().contain('12222232');\"\n        }\n    ]\n}\n\n`;\n\nexport default datasource;\n\n\nexport const main_list = `\n{\n    \"sets\":[\n        {\n            \"name\":\"one\",\n            \"index\":1,\n            \"size\":233,\n            \"mtime\":1523434343.1234\n\n        },{\n            \"name\":\"two\",\n            \"index\":11,\n            \"size\":233,\n            \"mtime\":1523434343.1234\n        },{ \n            \"name\":\"three\",\n            \"index\":12,\n            \"size\":233,\n            \"mtime\":1523434343.1234\n        },{\n            \"name\":\"four\",\n            \"index\":13,\n            \"size\":233,\n            \"mtime\":1523434343.1234\n        }\n    ]\n}\n`;\n\n"],"sourceRoot":""}